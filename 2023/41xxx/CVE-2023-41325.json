{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CVE Program Container",
        "references": [
          {
            "url": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-jrw7-63cq-7vhm",
            "name": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-jrw7-63cq-7vhm",
            "tags": [
              "x_refsource_CONFIRM",
              "x_transferred"
            ]
          },
          {
            "url": "https://github.com/OP-TEE/optee_os/commit/e2ec831cb07ed0099535c7c140cb6338aa62816a",
            "name": "https://github.com/OP-TEE/optee_os/commit/e2ec831cb07ed0099535c7c140cb6338aa62816a",
            "tags": [
              "x_refsource_MISC",
              "x_transferred"
            ]
          }
        ],
        "providerMetadata": {
          "orgId": "af854a3a-2127-422b-91ae-364da2661108",
          "shortName": "CVE",
          "dateUpdated": "2024-08-02T19:01:34.320Z"
        }
      },
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2023-41325",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "poc"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "total"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-09-25T18:48:57.951686Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-09-25T18:49:01.967Z"
        }
      }
    ],
    "cna": {
      "title": "OP-TEE double free in shdr_verify_signature",
      "source": {
        "advisory": "GHSA-jrw7-63cq-7vhm",
        "discovery": "UNKNOWN"
      },
      "metrics": [
        {
          "cvssV3_1": {
            "scope": "CHANGED",
            "version": "3.1",
            "baseScore": 7.4,
            "attackVector": "LOCAL",
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:N",
            "integrityImpact": "HIGH",
            "userInteraction": "REQUIRED",
            "attackComplexity": "LOW",
            "availabilityImpact": "NONE",
            "privilegesRequired": "HIGH",
            "confidentialityImpact": "HIGH"
          }
        }
      ],
      "affected": [
        {
          "vendor": "OP-TEE",
          "product": "optee_os",
          "versions": [
            {
              "status": "affected",
              "version": ">= 3.20, < 3.22"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-jrw7-63cq-7vhm",
          "name": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-jrw7-63cq-7vhm",
          "tags": [
            "x_refsource_CONFIRM"
          ]
        },
        {
          "url": "https://github.com/OP-TEE/optee_os/commit/e2ec831cb07ed0099535c7c140cb6338aa62816a",
          "name": "https://github.com/OP-TEE/optee_os/commit/e2ec831cb07ed0099535c7c140cb6338aa62816a",
          "tags": [
            "x_refsource_MISC"
          ]
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": "OP-TEE is a Trusted Execution Environment (TEE) designed as companion to a non-secure Linux kernel running on Arm; Cortex-A cores using the TrustZone technology. Starting in version 3.20 and prior to version 3.22, `shdr_verify_signature` can make a double free. `shdr_verify_signature` used to verify a TA binary before it is loaded. To verify a signature of it, allocate a memory for RSA key. RSA key allocate function (`sw_crypto_acipher_alloc_rsa_public_key`) will try to allocate a memory (which is optee\u2019s heap memory). RSA key is consist of exponent and modulus (represent as variable `e`, `n`) and it allocation is not atomic way, so it may succeed in `e` but fail in `n`. In this case sw_crypto_acipher_alloc_rsa_public_key` will free on `e` and return as it is failed but variable \u2018e\u2019 is remained as already freed memory address . `shdr_verify_signature` will free again that memory (which is `e`) even it is freed when it failed allocate RSA key. A patch is available in version 3.22. No known workarounds are available."
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-415",
              "description": "CWE-415: Double Free"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M",
        "dateUpdated": "2023-09-15T19:40:58.065Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2023-41325",
    "state": "PUBLISHED",
    "dateUpdated": "2024-09-25T18:49:09.428Z",
    "dateReserved": "2023-08-28T16:56:43.366Z",
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "datePublished": "2023-09-15T19:40:58.065Z",
    "assignerShortName": "GitHub_M"
  },
  "dataVersion": "5.1"
}