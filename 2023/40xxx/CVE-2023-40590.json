{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CVE Program Container",
        "references": [
          {
            "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4",
            "name": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4",
            "tags": [
              "x_refsource_CONFIRM",
              "x_transferred"
            ]
          },
          {
            "url": "https://docs.python.org/3/library/subprocess.html#popen-constructor",
            "name": "https://docs.python.org/3/library/subprocess.html#popen-constructor",
            "tags": [
              "x_refsource_MISC",
              "x_transferred"
            ]
          }
        ],
        "providerMetadata": {
          "orgId": "af854a3a-2127-422b-91ae-364da2661108",
          "shortName": "CVE",
          "dateUpdated": "2024-08-02T18:38:50.996Z"
        }
      },
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2023-40590",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "poc"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "total"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-10-02T14:04:30.245441Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-10-02T14:04:35.620Z"
        }
      }
    ],
    "cna": {
      "title": "Untrusted search path on Windows systems leading to arbitrary code execution",
      "source": {
        "advisory": "GHSA-wfm5-v35h-vwf4",
        "discovery": "UNKNOWN"
      },
      "metrics": [
        {
          "cvssV3_1": {
            "scope": "UNCHANGED",
            "version": "3.1",
            "baseScore": 7.8,
            "attackVector": "LOCAL",
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "integrityImpact": "HIGH",
            "userInteraction": "REQUIRED",
            "attackComplexity": "LOW",
            "availabilityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "HIGH"
          }
        }
      ],
      "affected": [
        {
          "vendor": "gitpython-developers",
          "product": "GitPython",
          "versions": [
            {
              "status": "affected",
              "version": "<= 3.1.32"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4",
          "name": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4",
          "tags": [
            "x_refsource_CONFIRM"
          ]
        },
        {
          "url": "https://docs.python.org/3/library/subprocess.html#popen-constructor",
          "name": "https://docs.python.org/3/library/subprocess.html#popen-constructor",
          "tags": [
            "x_refsource_MISC"
          ]
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": " GitPython is a python library used to interact with Git repositories. When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment. GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`. This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo. An attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands. There is no fix currently available for windows users, however there are a few mitigations. 1: Default to an absolute path for the git program on Windows, like `C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE` (default git path installation). 2: Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems. 3: Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path. 4: Resolve the executable manually by only looking into the `PATH` environment variable."
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-426",
              "description": "CWE-426: Untrusted Search Path"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M",
        "dateUpdated": "2023-08-28T17:24:09.965Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2023-40590",
    "state": "PUBLISHED",
    "dateUpdated": "2024-10-02T14:04:39.463Z",
    "dateReserved": "2023-08-16T18:24:02.392Z",
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "datePublished": "2023-08-28T17:24:09.965Z",
    "assignerShortName": "GitHub_M"
  },
  "dataVersion": "5.1"
}