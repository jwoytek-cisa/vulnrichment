{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-46692",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-09-29T15:06:36.463188Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-09-29T15:06:40.741Z"
        }
      }
    ],
    "cna": {
      "title": "firmware: qcom: scm: Mark get_wq_ctx() as atomic call",
      "affected": [
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "6bf325992236",
              "lessThan": "cdf7efe4b02a",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "6bf325992236",
              "lessThan": "e40115c33c0d",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "6bf325992236",
              "lessThan": "9960085a3a82",
              "versionType": "git"
            }
          ],
          "programFiles": [
            "drivers/firmware/qcom/qcom_scm-smc.c"
          ],
          "defaultStatus": "unaffected"
        },
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "6.3"
            },
            {
              "status": "unaffected",
              "version": "0",
              "lessThan": "6.3",
              "versionType": "custom"
            },
            {
              "status": "unaffected",
              "version": "6.6.49",
              "versionType": "custom",
              "lessThanOrEqual": "6.6.*"
            },
            {
              "status": "unaffected",
              "version": "6.10.8",
              "versionType": "custom",
              "lessThanOrEqual": "6.10.*"
            },
            {
              "status": "unaffected",
              "version": "6.11",
              "versionType": "original_commit_for_fix",
              "lessThanOrEqual": "*"
            }
          ],
          "programFiles": [
            "drivers/firmware/qcom/qcom_scm-smc.c"
          ],
          "defaultStatus": "affected"
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/cdf7efe4b02aa93813db0bf1ca596ad298ab6b06"
        },
        {
          "url": "https://git.kernel.org/stable/c/e40115c33c0d79c940545b6b12112aace7acd9f5"
        },
        {
          "url": "https://git.kernel.org/stable/c/9960085a3a82c58d3323c1c20b991db6045063b0"
        }
      ],
      "x_generator": {
        "engine": "bippy-c9c4e1df01b2"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Mark get_wq_ctx() as atomic call\n\nCurrently get_wq_ctx() is wrongly configured as a standard call. When two\nSMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to\nresume the corresponding sleeping thread. But if get_wq_ctx() is\ninterrupted, goes to sleep and another SMC call is waiting to be allocated\na waitq context, it leads to a deadlock.\n\nTo avoid this get_wq_ctx() must be an atomic call and can't be a standard\nSMC call. Hence mark get_wq_ctx() as a fast call."
        }
      ],
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-09-15T17:57:46.454Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-46692",
    "state": "PUBLISHED",
    "dateUpdated": "2024-09-29T15:06:51.373Z",
    "dateReserved": "2024-09-11T15:12:18.249Z",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "datePublished": "2024-09-13T05:29:21.631Z",
    "assignerShortName": "Linux"
  },
  "dataVersion": "5.1"
}