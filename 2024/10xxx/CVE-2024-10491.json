{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-10491",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "poc"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-10-29T19:42:55.922371Z"
              }
            }
          }
        ],
        "affected": [
          {
            "cpes": [
              "cpe:2.3:a:expressjs:express:*:*:*:*:*:*:*:*"
            ],
            "vendor": "expressjs",
            "product": "express",
            "versions": [
              {
                "status": "affected",
                "version": "3.0.0-alpha1",
                "versionType": "semver",
                "lessThanOrEqual": "3.21.2"
              }
            ],
            "defaultStatus": "unknown"
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-10-29T19:44:25.247Z"
        }
      }
    ],
    "cna": {
      "title": "Preload arbitrary resources by injecting additional `Link` headers",
      "source": {
        "discovery": "UNKNOWN"
      },
      "credits": [
        {
          "lang": "en",
          "type": "finder",
          "value": "abze"
        }
      ],
      "impacts": [
        {
          "capecId": "CAPEC-240",
          "descriptions": [
            {
              "lang": "en",
              "value": "CAPEC-240 Resource Injection"
            }
          ]
        }
      ],
      "metrics": [
        {
          "format": "CVSS",
          "cvssV3_1": {
            "scope": "CHANGED",
            "version": "3.1",
            "baseScore": 4,
            "attackVector": "NETWORK",
            "baseSeverity": "MEDIUM",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:N/A:N",
            "integrityImpact": "NONE",
            "userInteraction": "NONE",
            "attackComplexity": "HIGH",
            "availabilityImpact": "NONE",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "LOW"
          },
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ]
        }
      ],
      "affected": [
        {
          "repo": "https://github.com/expressjs/express",
          "vendor": "express",
          "product": "express",
          "versions": [
            {
              "status": "affected",
              "version": "3.0.0-alpha1",
              "versionType": "semver",
              "lessThanOrEqual": "3.21.2"
            }
          ],
          "packageName": "express",
          "collectionURL": "https://www.npmjs.com/package/express",
          "defaultStatus": "unaffected"
        }
      ],
      "references": [
        {
          "url": "https://www.herodevs.com/vulnerability-directory/cve-2024-10491"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.2.0"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "A vulnerability has been identified in the Express response.links\u00a0function, allowing for arbitrary resource injection in the Link\u00a0header when unsanitized data is used.\n\nThe issue arises from improper sanitization in `Link` header values, which can allow a combination of characters like `,`, `;`, and `<>` to preload malicious resources.\n\nThis vulnerability is especially relevant for dynamic parameters.",
          "supportingMedia": [
            {
              "type": "text/html",
              "value": "<p>A vulnerability has been identified in the Express <em>response.links</em>&nbsp;function, allowing for arbitrary resource injection in the <em>Link</em>&nbsp;header when unsanitized data is used.</p><p>The issue arises from improper sanitization in `Link` header values, which can allow a combination of characters like `,`, `;`, and `&lt;&gt;` to preload malicious resources.</p><p>This vulnerability is especially relevant for dynamic parameters.</p><br>",
              "base64": false
            }
          ]
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-74",
              "description": "CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "36c7be3b-2937-45df-85ea-ca7133ea542c",
        "shortName": "HeroDevs",
        "dateUpdated": "2024-10-29T16:26:16.251Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-10491",
    "state": "PUBLISHED",
    "dateUpdated": "2024-10-29T19:44:30.890Z",
    "dateReserved": "2024-10-29T11:53:00.416Z",
    "assignerOrgId": "36c7be3b-2937-45df-85ea-ca7133ea542c",
    "datePublished": "2024-10-29T16:23:21.219Z",
    "assignerShortName": "HeroDevs"
  },
  "dataVersion": "5.1"
}